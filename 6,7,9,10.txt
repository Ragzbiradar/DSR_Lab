# decsion tree:
install.packages("rpart.plot")
install.packages("rpart")
library("rpart")
library("rpart.plot")
play <- c('yes', 'no','yes', 'no', 'yes', 'yes', 'yes', 'yes','yes', 'no')
outlook <- c('rainy', 'rainy', 'overcast', 'sunny','rainy','sunny', 'rainy', 'sunny', 'overcast','sunny') 
temperature <- c('cool','cool', 'hot', 'mild', 'cool', 'cool', 'cool','hot', 'mild','mild')
humidity <- c('normal', 'normal', 'high', 'high','normal', 'normal','normal', 'normal', 'high', 'high' ) 
wind <- c('FALSE', 'TRUE', 'FALSE', 'FALSE', 'FALSE','FALSE', 'FALSE','FALSE', 'TRUE','TRUE')
play_decision <- data.frame(play, outlook, temperature, humidity, wind)
play_decision
str(play_decision)
summary(play_decision)
fit=rpart(play~outlook+temperature+humidity+wind,method="class",data=play_decision,control=rpart.control(minsplit=1),
          parms=list(split='information'))
fit
str(fit)
rpart.plot(fit,type=4,extra=1)
rpart.plot(fit,type=4,extra=2,clip.right.labs=FALSE,varlen=0,faclen=0)







#linear regression:
count<-c(9,25,15,2,14,25,24,47)
speed<-c(2,3,5,9,14,24,29,34)
fw<-data.frame(count,speed)
fw
cor(count,speed)
names<-c("Taw","Torridge","Ouse","Exe","Lyn","Brook","Ditch","Fal")
rownames(fw)=names
fw
fw.lm<-lm(count~speed,data=fw)
summary(fw.lm)
names(fw.lm)
fw.lm$coefficients

#gives slope and intercept
newpred<-fitted(fw.lm)
newpred
#obtaining confidence interval
confint(fw.lm)
confint(fw.lm,parm=c('(Intercept)','speed'))
#fitted values
fitted(fw.lm)
residuals(fw.lm)
#plotting the x, y values
plot(fw$speed,fw$count,col='red')
abline(coef(fw.lm),lty=1,col="blue")
#plotting the fitted line
coef(fw.lm)
#passing residuals
plot(fw.lm,which=1)



# k means clustering:

# import packages
library(cluster)
library(ggplot2)
library(plyr)
library(lattice)
library(graphics)
# data
x <- c(85,70,68,79,82,88)
y <- c(67,51,55,63,67,72)
clsample <- data.frame(x,y)
clsample
dim(clsample)
clsample1 <- data.matrix(clsample)
clsample1
cldata <- clsample[,1:2]
cldata
class(cldata)
# k-means clustering
km <- kmeans(cldata, centers = 2, nstart = 10)
km
km$cluster # clustering vector
km$centers # centroid of each cluster
km$withinss
km$betweenss
km$totss
# Visualizing clusters
plot(cldata[km$cluster == 1,], col = "red",xlim = c(min(cldata[,1]),max(cldata[,1])),ylim = c(min(cldata[,2]),max(cldata[,2])))
points(cldata[km$cluster == 2,],col = "blue")




# 10. Multivariate plot: 3d scatter plot


#install.packages("scatterplot3d") # Install for first time
#3d scatter plot: a multivariate plot showing relationship between 3 variables (length, width, height)
library("scatterplot3d") # load
data(iris)
head(iris)
colors <- c("#999999", "#E69F00", "#56B4E9")
colors <- colors[as.numeric(iris$Species)]
scatterplot3d(iris[,1:3],
              main="3D Scatter Plot",
              xlab = "Sepal Length (cm)",
              ylab = "Sepal Width (cm)",
              zlab = "Petal Length (cm)",pch = 16,color = colors, type="h",
              grid=TRUE, box=TRUE)

#scatterplot3d(iris[,1:3], pch = 16, color="steelblue")

